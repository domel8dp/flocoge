apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_7

repositories {
    mavenCentral()
}

configurations {
    diagramTestCompile.extendsFrom(testCompile)
}

sourceSets {
    generated {
        java {
            srcDir 'src/generated/java'
        }
    }
    main {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }
    diagramTest {
        java.srcDir 'src/diagramTest/java'
        resources.srcDir 'src/diagramTest/resources'
    }
}

dependencies {
    compile "com.sun.codemodel:codemodel:$codemodelVersion"

    testCompile sourceSets.generated.output
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"

    diagramTestCompile sourceSets.main.output
    diagramTestCompile sourceSets.test.output
}

task testDiagrams(type: Test, dependsOn: diagramTestClasses) {
    testClassesDirs = sourceSets.diagramTest.output.classesDirs
    classpath = sourceSets.diagramTest.runtimeClasspath
}

check.dependsOn testDiagrams

jar {
    manifest {
        attributes 'Main-Class': "pl.dpawlak.flocoge.Main"
        attributes 'Flocoge-Version': "$version"
    }
    from sourceSets.generated.output
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "pl.dpawlak.flocoge.Main"
        attributes 'Flocoge-Version': "$version"
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

assemble.dependsOn fatJar
